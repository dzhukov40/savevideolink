<?xml version="1.0" encoding="UTF-8"?>

<databaseChangeLog
        xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
         http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.1.xsd">

    <!-- TODO:надо написать хранимую процедуру для базюльки -->
    <!-- TODO:надо создать индексы базюльки -->
    <changeSet author="dzhukov" id="20171007-1">
        <comment>Structure for table "all_users"</comment>
        <sql>
            CREATE TABLE all_users (
            user_id BIGSERIAL,
            name varchar(40) NOT NULL UNIQUE,
            password varchar(40) NOT NULL,
            CONSTRAINT user_id_pk PRIMARY KEY (user_id)
            );
        </sql>
        <rollback>
            DROP TABLE IF EXISTS all_users;
        </rollback>
    </changeSet>

    <changeSet author="dzhukov" id="20171007-2">
        <comment>Structure for table "roles"</comment>
        <sql>
            CREATE TABLE roles (
            role_id BIGSERIAL,
            role integer NOT NULL UNIQUE,
            CONSTRAINT role_id_pk PRIMARY KEY (role_id)
            );
        </sql>
        <rollback>
            DROP TABLE IF EXISTS roles;
        </rollback>
    </changeSet>

    <changeSet author="dzhukov" id="20171007-3">
        <comment>Structure for table "all_users_roles"</comment>
        <sql>
            CREATE TABLE all_users_roles (
            user_id bigint NOT NULL,
            role_id bigint NOT NULL,
            CONSTRAINT all_users_roles_pk PRIMARY KEY (user_id, role_id),
            FOREIGN KEY (user_id) REFERENCES all_users (user_id),
            FOREIGN KEY (role_id) REFERENCES roles (role_id)
            );
        </sql>
        <rollback>
            DROP TABLE IF EXISTS all_users_roles;
        </rollback>
    </changeSet>



    <changeSet author="dzhukov" id="20171008-1">
        <comment>Structure for table "links"</comment>
        <sql>
            CREATE TABLE links (
            link_id BIGSERIAL,
            link text NOT NULL UNIQUE,
            description varchar(200) NOT NULL,
            link_master bigint NOT NULL,
            CONSTRAINT link_id_pk PRIMARY KEY (link_id),
            FOREIGN KEY (link_master) REFERENCES all_users (user_id)
            );
        </sql>
        <rollback>
            DROP TABLE IF EXISTS links;
        </rollback>
    </changeSet>

    <changeSet author="dzhukov" id="20171008-2">
        <comment>Structure for table "lists"</comment>
        <sql>
            CREATE TABLE lists (
            list_id BIGSERIAL,
            description varchar(200) NOT NULL,
            list_master bigint NOT NULL,
            CONSTRAINT list_id_pk PRIMARY KEY (list_id),
            FOREIGN KEY (list_master) REFERENCES all_users (user_id)
            );
        </sql>
        <rollback>
            DROP TABLE IF EXISTS lists;
        </rollback>
    </changeSet>

    <changeSet author="dzhukov" id="20171008-3">
        <comment>Structure for table "links_lists"</comment>
        <sql>
            CREATE TABLE links_lists (
            link_id bigint NOT NULL,
            list_id bigint NOT NULL,
            CONSTRAINT links_lists_pk PRIMARY KEY (link_id, list_id),
            FOREIGN KEY (link_id) REFERENCES links (link_id),
            FOREIGN KEY (list_id) REFERENCES lists (list_id)
            );
        </sql>
        <rollback>
            DROP TABLE IF EXISTS links_lists;
        </rollback>
    </changeSet>

</databaseChangeLog>